// <auto-generated />
using System;
using Fitnes.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fitnes.Storage.Migrations
{
    [DbContext(typeof(FitnesDbContext))]
    [Migration("20200512121258_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fitnes.Storage.Repository.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AuthorId");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Anton"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Ivan"
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("TrainerId");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            LastName = "Tarasyan",
                            Name = "Mike",
                            SubscriptionId = 1,
                            TrainerId = 1
                        },
                        new
                        {
                            ClientId = 2,
                            LastName = "Islanova",
                            Name = "Ayka",
                            SubscriptionId = 2,
                            TrainerId = 2
                        },
                        new
                        {
                            ClientId = 3,
                            LastName = "Sharshan",
                            Name = "Mike",
                            SubscriptionId = 3
                        },
                        new
                        {
                            ClientId = 4,
                            LastName = "Konopkin",
                            Name = "Dima",
                            SubscriptionId = 1,
                            TrainerId = 1
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Experience")
                        .HasColumnType("float");

                    b.Property<int?>("GymId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("GymId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Experience = 0.0,
                            GymId = 1,
                            Name = "Ivan",
                            PositionId = 1,
                            Salary = 20
                        },
                        new
                        {
                            EmployeeId = 2,
                            Experience = 2.0,
                            GymId = 1,
                            Name = "Vadim",
                            PositionId = 2,
                            Salary = 50
                        },
                        new
                        {
                            EmployeeId = 3,
                            Experience = 0.5,
                            GymId = 1,
                            Name = "Anton",
                            PositionId = 3,
                            Salary = 30
                        },
                        new
                        {
                            EmployeeId = 4,
                            Experience = 0.0,
                            GymId = 2,
                            Name = "Kate",
                            PositionId = 1,
                            Salary = 20
                        },
                        new
                        {
                            EmployeeId = 5,
                            Experience = 2.0,
                            GymId = 2,
                            Name = "Liza",
                            PositionId = 2,
                            Salary = 50
                        },
                        new
                        {
                            EmployeeId = 6,
                            Experience = 0.5,
                            GymId = 2,
                            Name = "Dasha",
                            PositionId = 3,
                            Salary = 30
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Gym", b =>
                {
                    b.Property<int>("GymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("GymId");

                    b.ToTable("Gym");

                    b.HasData(
                        new
                        {
                            GymId = 1,
                            Address = "Stud",
                            Name = "Super 1"
                        },
                        new
                        {
                            GymId = 2,
                            Address = "BMar",
                            Name = "Best 1"
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.GymTrainingMachine", b =>
                {
                    b.Property<int?>("GymId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingMachineId")
                        .HasColumnType("int");

                    b.HasKey("GymId", "TrainingMachineId");

                    b.HasIndex("TrainingMachineId");

                    b.ToTable("GymTrainingMachine");

                    b.HasData(
                        new
                        {
                            GymId = 1,
                            TrainingMachineId = 1
                        },
                        new
                        {
                            GymId = 1,
                            TrainingMachineId = 2
                        },
                        new
                        {
                            GymId = 1,
                            TrainingMachineId = 3
                        },
                        new
                        {
                            GymId = 2,
                            TrainingMachineId = 1
                        },
                        new
                        {
                            GymId = 2,
                            TrainingMachineId = 2
                        },
                        new
                        {
                            GymId = 2,
                            TrainingMachineId = 3
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PositionId");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            Name = "Cleaner"
                        },
                        new
                        {
                            PositionId = 2,
                            Name = "Trainer"
                        },
                        new
                        {
                            PositionId = 3,
                            Name = "Security"
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.ProgramWorkout", b =>
                {
                    b.Property<int>("ProgramWorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Period")
                        .HasColumnType("float");

                    b.HasKey("ProgramWorkoutId");

                    b.HasIndex("AuthorId");

                    b.ToTable("ProgramWorkout");

                    b.HasData(
                        new
                        {
                            ProgramWorkoutId = 1,
                            AuthorId = 1,
                            Name = "Super Program",
                            Period = 10.0
                        },
                        new
                        {
                            ProgramWorkoutId = 2,
                            AuthorId = 2,
                            Name = "Exelent Program",
                            Period = 5.0
                        },
                        new
                        {
                            ProgramWorkoutId = 3,
                            AuthorId = 1,
                            Name = "Best Program",
                            Period = 3.0
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<double>("Time")
                        .HasColumnType("float");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscription");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            Name = "Super Subscription",
                            Price = 12,
                            Time = 12.0
                        },
                        new
                        {
                            SubscriptionId = 2,
                            Name = "Exelent Subscription",
                            Price = 6,
                            Time = 5.0
                        },
                        new
                        {
                            SubscriptionId = 3,
                            Name = "Best Subscription",
                            Price = 3,
                            Time = 3.0
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Trainer", b =>
                {
                    b.Property<int>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramWorkoutId")
                        .HasColumnType("int");

                    b.HasKey("TrainerId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("ProgramWorkoutId");

                    b.ToTable("Trainer");

                    b.HasData(
                        new
                        {
                            TrainerId = 1,
                            EmployeeId = 2,
                            ProgramWorkoutId = 1
                        },
                        new
                        {
                            TrainerId = 2,
                            EmployeeId = 4,
                            ProgramWorkoutId = 2
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.TrainingMachine", b =>
                {
                    b.Property<int>("TrainingMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsForBack")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForHand")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForLeg")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TrainingMachineId");

                    b.ToTable("TrainingMachine");

                    b.HasData(
                        new
                        {
                            TrainingMachineId = 1,
                            IsForBack = false,
                            IsForHand = true,
                            IsForLeg = false,
                            Name = "Super Hand"
                        },
                        new
                        {
                            TrainingMachineId = 2,
                            IsForBack = false,
                            IsForHand = false,
                            IsForLeg = true,
                            Name = "Super Leg"
                        },
                        new
                        {
                            TrainingMachineId = 3,
                            IsForBack = true,
                            IsForHand = false,
                            IsForLeg = false,
                            Name = "Super Back"
                        });
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Client", b =>
                {
                    b.HasOne("Fitnes.Storage.Repository.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId");

                    b.HasOne("Fitnes.Storage.Repository.Trainer", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Employee", b =>
                {
                    b.HasOne("Fitnes.Storage.Repository.Gym", "Gym")
                        .WithMany()
                        .HasForeignKey("GymId");

                    b.HasOne("Fitnes.Storage.Repository.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.GymTrainingMachine", b =>
                {
                    b.HasOne("Fitnes.Storage.Repository.Gym", "Gym")
                        .WithMany("GymTrainingMachines")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitnes.Storage.Repository.TrainingMachine", "TrainingMachine")
                        .WithMany("GymTrainingMachines")
                        .HasForeignKey("TrainingMachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.ProgramWorkout", b =>
                {
                    b.HasOne("Fitnes.Storage.Repository.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fitnes.Storage.Repository.Trainer", b =>
                {
                    b.HasOne("Fitnes.Storage.Repository.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitnes.Storage.Repository.ProgramWorkout", "ProgramWorkout")
                        .WithMany()
                        .HasForeignKey("ProgramWorkoutId");
                });
#pragma warning restore 612, 618
        }
    }
}
